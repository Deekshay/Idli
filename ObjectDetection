/*
 * main.cpp
 *
 *  Created on: Apr 21, 2014
 *      Author: Srinivasan
 */

#include <cv.h>
#include <highgui.h>
#include <stdio.h>
#include "opencv2\opencv.hpp"
using namespace cv;

using namespace std;
#include <iostream>
#include <string.h>

//* Function Headers
void detectAndDisplay( Mat frame );

//* Global variables
String milk_cascade_name = "./newDetector.xml";
//String milk_cascade_name = "./milkClassfier.xml";
//String milk_cascade_name = "./Detector1.xml";
//String milk_cascade_name = "2banana_classifier.xml";

CascadeClassifier milk_cascade;
string window_name = "Capture - Milk detection";
RNG rng(12345);

// * @function main
int main( int argc, const char** argv )
{
	CvCapture* capture;
	Mat frame;

	//-- 1. Load the cascades
	if( !milk_cascade.load( milk_cascade_name ) ){ printf("--(!)Error loading\n"); return -1; };

	//-- 2. Read the video stream
	// capture = cvCaptureFromCAM( -1 );
	//if( capture )
	{
		{
			// frame = cvQueryFrame( capture );
			string str;
		//	frame = imread(argv[1]);

			frame = imread("G:\\Eclipse\\WorkspaceC++\\oj\\test\\old\\64.jpg");
			//-- 3. Apply the classifier to the frame
			if(!frame.empty())
			{
				detectAndDisplay(frame);
			}
			else
			{
				printf("No image");
			}

		}
	}
	return 0;
}

//* @function detectAndDisplay
void detectAndDisplay( Mat frame )
{
	std::vector<Rect> item;

	//-- Detect item
	milk_cascade.detectMultiScale( frame, item, 1.1, 4, 0|CV_HAAR_SCALE_IMAGE, Size(40, 10) );
	if(item.size() != 0)
	{
		int max = 0, i = 0;
		for( size_t j = 0; j < item.size(); j++ )
		{
			if(max < item[j].width*item[j].height){
				max = item[i].width*item[i].height;

				i = j;
			}
		}
		//    for( size_t i = 0; i < item.size(); i++ )
		{
			Point pt1, pt2;
			pt1.x = item[i].x;
			pt1.y = item[i].y;
			pt2.x = item[i].x + item[i].width;
			pt2.y = item[i].y + item[i].height;
			cout << item[i].width*item[i].height;
			rectangle( frame, pt1, pt2, 4, 2, 0 );

			Mat faceROI = frame( item[i] );

		}
		//-- Show what you got
		imshow( window_name, frame );
		//./test/old/8.jpg
	}
	else
	{
		imshow( window_name, frame );
		    cout <<"No object detected \n" << endl;
		//imshow( window_name, frame );
	}
	waitKey(0);
}
